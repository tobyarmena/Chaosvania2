<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_vanish</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemies</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
//Pathfinding
path = path_add();
//Last location variables
createTarget = false;
create = true;
//Variable that checks if player should be followed
follow = false;
//Wander Variable
timer = 1;
//health
hp = 20;
//checks if it should be dealt damage
dealDamage = true

state = 0;
charge = false;

target1 = noone

xx = irandom_range(-100,100)
yy = irandom_range(-100,100)

fx = obj_player.x + xx
fy = obj_player.y + yy
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if follow = true{
    //finds players position
    targetX = obj_player.x;
    targetY = obj_player.y;

    cx = lengthdir_x(10000,point_direction(x,y,targetX,targetY));
    cy = lengthdir_y(10000,point_direction(x,y,targetX,targetY));

    charge = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Basically resets all the variables
state = 1;
createTarget = true;
charge = false;

xx = irandom_range(-300,300)
yy = irandom_range(-300,300)

fx = obj_player.x + xx
fy = obj_player.y + yy
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

//Check if player is in following distance
if distance_to_object(obj_player) &lt;= 750 &amp;&amp; !collision_line(x,y,obj_player.x,obj_player.y,par_wall,0,1){
    follow = true;
    createTarget = true;
    
    if state = 0
        state = 2;
    
    //Makes sure there are no targets created
    if !(create){
        create = true;
        with (target1){
            instance_destroy();
        }
    }
}
else{ //If follow is false, sets state to 0, and deletes any existing target
    scr_wander(2000);
    follow = false;
    state = 0
    visible = true;
    
    if instance_exists(target1){
        with (target1){
            instance_destroy();   
        }
    }
}
 
if (follow){    
    if (state == 1){
        //vanish
        visible = false;
        if (createTarget == true){
        //Creates a target 
            if (create){
                //makes sure position is empty where the target is being created, if not it finds a new spot
                if position_empty(fx,fy){
                    target1 = instance_create(fx,fy,obj_target);
                
                    create = false;
                }
                else
                    if !alarm[0]
                        alarm[0] = 1;            
                }
        //Move towards the target
        if instance_exists(target1)
            scr_follow(target1,0,9000);        
        }
    }
    
    if (state == 2){
        //reappear
        visible = true;
        //Turns to player before charging
        if !charge{
            scr_turn(point_direction(x,y,obj_player.x,obj_player.y),10);
            phy_rotation = -direction;
        }
        //If not charging, set the alarm
        if !alarm[1] &amp;&amp; !charge 
            alarm[1] = 90
        //if there is no collision, and charge is true and follow is true, then set the alarm which turns off charge
        if !collision_line(x,y,obj_player.x,obj_player.y,par_wall,0,1) &amp;&amp; charge &amp;&amp; follow{
            if !alarm[0]
                alarm[0] = 120;
            //charges           
            physics_apply_force(x,y,cx,cy);
        }
    }
}

//die
if hp&lt;=0
    {
    instance_destroy()
    if instance_exists(target1){
        with target1{
            instance_destroy();
        }
    }
}    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_target">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>createTarget = false;

state = 2;

with (target1){
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if charge
    alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>1.20000004768372</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>3</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
