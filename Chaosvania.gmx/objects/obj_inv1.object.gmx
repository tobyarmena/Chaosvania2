<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display = false;

random_get_seed()

//Inital Screen Variables
xleft = view_xview
xright = view_wview
ytop =  view_yview
ybottom = view_hview

numRows = 4

//Character Display
Cx1 = xleft
Cy1 = ytop
Cx2 = xright*0.35
Cy2 = ybottom

//Hud Display
Hx1 = Cx2
Hy1 = ytop
Hx2 = xright
Hy2 = ybottom*2/10

//Item Display
Ix1 = Cx2
Iy1 = ytop
Ix2 = xright
Iy2 = ybottom*1/10

 for (i=0; i&lt;=numRows; i+=1)
 {
     colour[i] = make_colour_hsv(random(255),255,255)

 };
 
invText[0] = "Arm"
invText[1] = "Mods"
invText[2] = "Skulls"
invText[3] = "Feet Mods"
invText[4] = "Cores"

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collect Item Library Data

scr_itemlibrary()

totalItem = array_height_2d(item_lib)

for(i = 0; i&lt; 4;i++)
   cnt[i] = 0
/*****
cnt[0] - number of Mods
cnt[1] - number of Skulls
cnt[2] - number of Feets
cnt[3] - number of Core
*****/ 

for (i=0; i&lt;totalItem; i+=1)
{
    type = item_lib[i,1]
    if type == "mod"
    {
        locMod[cnt[0]] = i //Store the item index of the Mod
        cnt[0] += 1
    }
    else if type == "skull"
    {
        locSkull[cnt[1]] = i
        cnt[1] += 1
    }
    else if type == "feet"
    {
        locFeet[cnt[2]] = i
        cnt[2] += 1
    }
    else if type == "core"
    {
        locCore[cnt[3]] = i
        cnt[3] += 1
    }
    else
        show_debug_message(string("Not a valid item type"))
};

show_debug_message(cnt[3])
show_debug_message(locCore)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if keyboard_check_pressed(ord("E")) and !obj_control.cmdLine
{
    display^=true;
    if !global.paused and display
        with(obj_control)
            scr_pause()
    else
        with(obj_control)
            scr_unpause()
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Character Rectangle (debug)
draw_set_font(fnt_inv)
if display
{

    draw_set_alpha(0.5) 
    draw_set_colour(c_lime)
    draw_rectangle(Cx1,Cy1,Cx2,Hy2+Iy2*(numRows+1),0)
    
    draw_set_colour(c_red)
    draw_rectangle(Hx1,Hy1,Hx2,Hy2,0)
    
    
    for (i=0; i&lt;=numRows; i+=1)
    {
        draw_set_colour(colour[i])
        draw_set_alpha(0.5)
        draw_rectangle(Ix1,Hy2+Iy1+Iy2*(i),Ix2,Hy2+Iy2*(i+1),0)
        
        
        draw_set_colour(c_white)
        draw_set_alpha(1)
        draw_text_transformed(Ix1,Hy2+Iy1+Iy2*(i),invText[i],1,1,0)
        draw_sprite_ext(spr_arrow,1,Ix1+128,Hy2+Iy1+Iy2*(i),1,1,0,c_white,1)
        draw_sprite_ext(spr_arrow,0,Ix2-32,Hy2+Iy1+Iy2*(i),1,1,0,c_white,1)
    };
    
    draw_set_colour(c_maroon)
    draw_set_alpha(0.5)
    draw_rectangle(xleft,Hy2+Iy2*(numRows+1),xright,ybottom,0)

        

    



    
}



draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
