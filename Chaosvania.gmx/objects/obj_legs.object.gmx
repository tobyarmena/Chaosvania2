<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_legs</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.3
delay=false



//for scripts
candash=0

stamina=0



tick=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delay=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if obj_player.state == "action" || obj_player.state == "upgrading" || obj_player.state == "pickup" || obj_player.state == "pushing"
{

spd=20

if((keyboard_check(ord("W"))) || (keyboard_check(ord("A"))) || (keyboard_check(ord("S"))) || (keyboard_check(ord("D"))))&amp;&amp;obj_player.phy_speed&gt;0.3 
{
        image_speed = 0.25
}

else
{
    image_speed = 0
    image_index = 0
}

//WALK ANIMATIONS
var mouse;
//mouse=point_direction(x,y,mouse_x,mouse_y)
mouse=obj_player.direction

if mouse &lt; 45 or mouse &gt; 314
    {
    
    if keyboard_check(ord('D')) &amp;&amp; keyboard_check(ord('W'))
        {
        visible = true
        scr_turn_legs(20,spd) 
        }
        
    else if keyboard_check(ord('D')) &amp;&amp; keyboard_check(ord('S')) 
        {
        visible = true
        scr_turn_legs(340,spd) 
        }
    else if keyboard_check(ord('A')) &amp;&amp; keyboard_check(ord('S'))
        {
        visible = true
        scr_turn_legs(20,spd)  
        }
    else if keyboard_check(ord('A')) &amp;&amp; keyboard_check(ord('W')) 
        {
        visible = true
        scr_turn_legs(340,spd) 
        }
    else if keyboard_check(ord('D')) or keyboard_check(ord('A'))
        {
        visible = true
        scr_turn_legs(0,spd) 
        }
    else if keyboard_check(ord('W')) 
        {
        visible = true
        scr_turn_legs(45,spd) 
        }
    else if keyboard_check(ord('S')) 
        {
        visible = true
        scr_turn_legs(315,spd) 
        }
    else
        {
        scr_turn_legs(0,spd)
        }
        }
else if mouse &lt; 135 &amp;&amp; mouse &gt; 44
    {
    if keyboard_check(ord('D')) &amp;&amp; keyboard_check(ord('W'))
        {
        visible = true
        scr_turn_legs(70,spd)  
        }
        
    else if keyboard_check(ord('D')) &amp;&amp; keyboard_check(ord('S')) 
        {
        visible = true
        scr_turn_legs(110,spd) 
        }
    else if keyboard_check(ord('A')) &amp;&amp; keyboard_check(ord('S'))
        {
        visible = true
        scr_turn_legs(70,spd)  
        }
    else if keyboard_check(ord('A')) &amp;&amp; keyboard_check(ord('W')) 
        {
        visible = true
        scr_turn_legs(110,spd)
        }
    else if keyboard_check(ord('D')) 
        {
        visible = true
        scr_turn_legs(45,spd) 
        }
    else if keyboard_check(ord('W')) 
        {
        visible = true
        scr_turn_legs(90,spd) 
        }
    else if keyboard_check(ord('S')) 
        {
        visible = true
        scr_turn_legs(90,spd)
        }
    else if keyboard_check(ord('A')) 
        {
        visible = true
        scr_turn_legs(135,spd) 
        }
    else
        {
        scr_turn_legs(90,spd)
        }
        
        }
else if mouse &lt; 225 &amp;&amp; mouse &gt; 135
    {
    if keyboard_check(ord('D')) &amp;&amp; keyboard_check(ord('W'))
        {
        visible = true
        scr_turn_legs(200,spd)  
        }
        
    else if keyboard_check(ord('D')) &amp;&amp; keyboard_check(ord('S')) 
        {
        visible = true
        scr_turn_legs(160,spd)
        }
    else if keyboard_check(ord('A')) &amp;&amp; keyboard_check(ord('S'))
        {
        visible = true
        scr_turn_legs(200,spd) 
        }
    else if keyboard_check(ord('A')) &amp;&amp; keyboard_check(ord('W')) 
        {
        visible = true
        scr_turn_legs(160,spd)
        }
    else if keyboard_check(ord('D')) 
        {
        visible = true
        scr_turn_legs(180,spd) 
        }
    else if keyboard_check(ord('W')) 
        {
        visible = true
        scr_turn_legs(135,spd)
        }
    else if keyboard_check(ord('S')) 
        {
        visible = true
        scr_turn_legs(225,spd)
        }
    else if keyboard_check(ord('A')) 
        {
        visible = true
        scr_turn_legs(180,spd) 
        }
    else
        {
        scr_turn_legs(180,spd)
        }
        
        }
else if mouse &lt; 315 &amp;&amp; mouse &gt; 224
    {
    if keyboard_check(ord('D')) &amp;&amp; keyboard_check(ord('W'))
        {
        visible = true
        scr_turn_legs(250,spd)  
        }
        
    else if keyboard_check(ord('D')) &amp;&amp; keyboard_check(ord('S')) 
        {
        visible = true
        scr_turn_legs(290,spd)
        }
    else if keyboard_check(ord('A')) &amp;&amp; keyboard_check(ord('S'))
        {
        visible = true
        scr_turn_legs(250,spd) 
        }
    else if keyboard_check(ord('A')) &amp;&amp; keyboard_check(ord('W')) 
        {
        visible = true
        scr_turn_legs(290,spd)
        }
    else if keyboard_check(ord('D')) 
        {
        visible = true
        scr_turn_legs(315,spd) 
        }
    else if keyboard_check(ord('W')) 
        {
        visible = true
        scr_turn_legs(270,spd)
        }
    else if keyboard_check(ord('S')) 
        {
        visible = true
        scr_turn_legs(270,spd)
        }
    else if keyboard_check(ord('A')) 
        {
        visible = true
        scr_turn_legs(225,spd) 
        }
    else
        {
        scr_turn_legs(270,spd)
        }
        }

}
else
    {
    image_speed = 0
    image_index = 0
    scr_turn_legs(obj_player.direction,spd)
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = obj_player.x+lengthdir_x(10,obj_player.direction);
y = obj_player.y+lengthdir_y(10,obj_player.direction);
image_angle=direction;
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
