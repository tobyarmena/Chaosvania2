<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_doorupleft1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>par_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>door1 = physics_fixture_create();

physics_fixture_set_polygon_shape(door1)
physics_fixture_add_point(door1, 0,0);
physics_fixture_add_point(door1, 128,0);
physics_fixture_add_point(door1, 128, 64);
physics_fixture_add_point(door1, 0, 64);

physics_fixture_set_density(door1,0.15);
physics_fixture_set_restitution(door1,0.1)
physics_fixture_set_collision_group(door1,0);
physics_fixture_set_linear_damping(door1,1.5);
physics_fixture_set_angular_damping(door1,1.5);
physics_fixture_set_friction(door1,0.2)

physics_fixture_bind(door1,self)

lock = true;

state = 0;
physics_joint_revolute_create(self,obj_wall,x,y+32,0,0,0,0,0,0,0);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state = 1{
    if distance_to_object(obj_player) &gt; 100{
        if (phy_rotation &gt; 0){
            state = 3;
        }
        if (phy_rotation &lt; 0){
            state = 2;
        }    
    }
    else
        alarm[0] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if lock == true 
    phy_fixed_rotation = true;
else{
    if instance_exists(obj_doorupright1)
        obj_doorupright1.lock = false;
    phy_fixed_rotation = false;
}
if state == 0 
    phy_rotation = 0;

if state == 2
    phy_rotation = clamp(phy_rotation,-90,0);
if state == 3
    phy_rotation = clamp(phy_rotation,0,90);
else
    phy_rotation = clamp(phy_rotation,-90,90);

if state = 2
    if phy_rotation != 0
        phy_rotation += 7;
    else 
        state = 0;

if state = 3
    if phy_rotation != 0
        phy_rotation -= 7;
    else
        state = 0;

        


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if lock == true{
    if (obj_player.hingekey &gt; 0){
        lock = false;
        obj_player.hingekey -= 1;
    }
}
else if instance_exists(obj_doorupright1)
    {
    if lock == false || obj_doorupright1.lock == false
        {
        state = 1
        alarm[0] = 30;
        }
    }
else
    {
    if lock == false 
        {
        state = 1
        alarm[0] = 30;
        }
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
